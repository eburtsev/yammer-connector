/**
 * Mule Yammer Cloud Connector
 *
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */

/**
 * This file was automatically generated by the Mule Cloud Connector Development Kit
 */
package org.mule.yammer;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.List;

import junit.framework.Assert;

import org.junit.Ignore;
import org.junit.Test;

public class YammerTestCase extends Assert {
    @Test
    @Ignore
    public void testGetMessages() throws Exception {
        YammerConnector connector = new YammerConnector();
        connector.setConsumerKey(System.getProperty("consumer.key"));
        connector.setConsumerSecret(System.getProperty("consumer.secret"));
        
        String token = System.getProperty("token");
        //String secret = System.getProperty("secret");
        
        connector.setDebug(true);
        connector.initialise();

        // If you don't have a token/secret, uncomment out these lines. The connector
        // will print out a URL where you can go to and then set the verifier code here
        // String url = connector.requestAuthorization();
        // System.out.println("Please go to " + url + " to get an access code.");
        // String oauthVerifier = getOauthVerifierFromSystemIn();
        // connector.setOauthVerifier(oauthVerifier);

        List<Message> messages = connector.getMessages(token, null);
        assertTrue(messages.size() > 0);
        
        messages = connector.getSentMessages(token);
        assertTrue(messages.size() > 0);
        
        messages = connector.getPrivateMessages(token);
//        assertTrue(messages.size() > 0);
        
        messages = connector.getFollowingMessages(token);
        assertTrue(messages.size() > 0);
        System.out.println(messages);
    }

    protected String getOauthVerifierFromSystemIn() {
        System.out.print("Enter your oauth access token: ");

        // open up standard input
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        String oauthVerifier = null;

        try {
            oauthVerifier = br.readLine();
        } catch (IOException ioe) {
            System.out.println("IO error trying to read your name!");
            System.exit(1);
        }
        return oauthVerifier;
    }
}
